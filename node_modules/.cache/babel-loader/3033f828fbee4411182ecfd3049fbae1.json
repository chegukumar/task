{"ast":null,"code":"import { saveUser, logOutUser } from '../../../utils';\n\nfunction getUrl() {\n  let URL = 'http://localhost:3000/dataLogin.json';\n  return URL;\n}\n/**\n*\n* @returns {Function}\n*/\n\n\nexport default function login(body) {\n  const URL = getUrl();\n  console.log(body, \"body\");\n  return function (dispatch) {\n    dispatch(request());\n    fetch(URL, body).then(resp => resp.json()).then(data => {\n      if (body.email !== data.username) {\n        console.log(\"false\");\n      } else {\n        if (saveUser(json.data)) {\n          dispatch(received(data));\n        } else {\n          dispatch(failed({\n            error: true,\n            statusCode: \"400\",\n            message: \"Something went wrong\"\n          }));\n        }\n      }\n    }) // .then((json) =>{\n    // if(!json.error){\n    //     if(saveUser(json.data)) {\n    //         dispatch(\n    //             received(json)\n    //         )\n    //     }\n    //     else {\n    //         dispatch(failed({error: true, statusCode: \"400\", message: \"Something went wrong\"}));\n    //     }\n    // }\n    // else {\n    //     dispatch(failed(json));\n    // }\n    // })\n    .catch(error => {\n      dispatch(failed(error));\n    });\n  };\n}\n/**\n*\n* @returns {{type}}\n*/\n\nfunction request() {\n  return {\n    type: 'LOGIN_PENDING'\n  };\n}\n/**\n*\n* @param response\n* @returns {{type, payload: {json: *}}}\n*/\n\n\nfunction received(response) {\n  return {\n    type: 'LOGIN',\n    payload: {\n      response\n    }\n  };\n}\n/**\n*\n* @param error\n* @returns {{type, error: *}}\n*/\n\n\nfunction failed(error) {\n  return {\n    type: 'LOGIN_FAILED',\n    error\n  };\n}","map":{"version":3,"sources":["/var/www/html/task/src/components/Auth/actions/authLogin.js"],"names":["saveUser","logOutUser","getUrl","URL","login","body","console","log","dispatch","request","fetch","then","resp","json","data","email","username","received","failed","error","statusCode","message","catch","type","response","payload"],"mappings":"AAAA,SACIA,QADJ,EAEIC,UAFJ,QAGO,gBAHP;;AAKA,SAASC,MAAT,GAAiB;AACb,MAAIC,GAAG,GAAG,sCAAV;AACA,SAAOA,GAAP;AACH;AACD;;;;;;AAIA,eAAe,SAASC,KAAT,CAAeC,IAAf,EAAqB;AAEhC,QAAMF,GAAG,GAAGD,MAAM,EAAlB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAiB,MAAjB;AACA,SAAO,UAAUG,QAAV,EAAoB;AACvBA,IAAAA,QAAQ,CACJC,OAAO,EADH,CAAR;AAGAC,IAAAA,KAAK,CAACP,GAAD,EAAME,IAAN,CAAL,CACCM,IADD,CACOC,IAAD,IAAQA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEOG,IAAD,IAAQ;AACV,UAAGT,IAAI,CAACU,KAAL,KAAeD,IAAI,CAACE,QAAvB,EAAgC;AAC5BV,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,OAFD,MAEM;AACF,YAAGP,QAAQ,CAACa,IAAI,CAACC,IAAN,CAAX,EAAwB;AACZN,UAAAA,QAAQ,CACJS,QAAQ,CAACH,IAAD,CADJ,CAAR;AAGH,SAJT,MAKa;AACDN,UAAAA,QAAQ,CAACU,MAAM,CAAC;AAACC,YAAAA,KAAK,EAAE,IAAR;AAAcC,YAAAA,UAAU,EAAE,KAA1B;AAAiCC,YAAAA,OAAO,EAAE;AAA1C,WAAD,CAAP,CAAR;AACH;AACZ;AACJ,KAfD,EAgBA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AA9BA,KA+BCC,KA/BD,CA+BOH,KAAK,IAAI;AACZX,MAAAA,QAAQ,CAACU,MAAM,CAACC,KAAD,CAAP,CAAR;AACH,KAjCD;AAkCH,GAtCD;AAuCH;AAED;;;;;AAIA,SAASV,OAAT,GAAmB;AACf,SAAO;AACHc,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH;AAED;;;;;;;AAKA,SAASN,QAAT,CAAkBO,QAAlB,EAA4B;AACxB,SAAO;AACHD,IAAAA,IAAI,EAAE,OADH;AAEHE,IAAAA,OAAO,EAAE;AACLD,MAAAA;AADK;AAFN,GAAP;AAMH;AAED;;;;;;;AAKA,SAASN,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,SAAO;AACHI,IAAAA,IAAI,EAAE,cADH;AAEHJ,IAAAA;AAFG,GAAP;AAIH","sourcesContent":["import {\n    saveUser,\n    logOutUser\n} from '../../../utils';\n\nfunction getUrl(){\n    let URL = 'http://localhost:3000/dataLogin.json';\n    return URL;\n}\n/**\n*\n* @returns {Function}\n*/\nexport default function login(body) {\n    \n    const URL = getUrl();\n    console.log(body,\"body\")\n    return function (dispatch) {\n        dispatch(\n            request()\n        );\n        fetch(URL, body)\n        .then((resp)=>resp.json())\n        .then((data)=>{\n            if(body.email !== data.username){\n                console.log(\"false\")\n            }else {\n                if(saveUser(json.data)) {\n                            dispatch(\n                                received(data)\n                            )\n                        }\n                        else {\n                            dispatch(failed({error: true, statusCode: \"400\", message: \"Something went wrong\"}));\n                        }\n            }\n        })\n        // .then((json) =>{\n            // if(!json.error){\n            //     if(saveUser(json.data)) {\n            //         dispatch(\n            //             received(json)\n            //         )\n            //     }\n            //     else {\n            //         dispatch(failed({error: true, statusCode: \"400\", message: \"Something went wrong\"}));\n            //     }\n            // }\n            // else {\n            //     dispatch(failed(json));\n            // }\n        // })\n        .catch(error => {\n            dispatch(failed(error));\n        });\n    };\n}\n\n/**\n*\n* @returns {{type}}\n*/\nfunction request() {\n    return {\n        type: 'LOGIN_PENDING',\n    };\n}\n\n/**\n*\n* @param response\n* @returns {{type, payload: {json: *}}}\n*/\nfunction received(response) {\n    return {\n        type: 'LOGIN',\n        payload: {\n            response\n        }\n    };\n}\n\n/**\n*\n* @param error\n* @returns {{type, error: *}}\n*/\nfunction failed(error) {\n    return {\n        type: 'LOGIN_FAILED',\n        error\n    };\n}\n\n\n"]},"metadata":{},"sourceType":"module"}