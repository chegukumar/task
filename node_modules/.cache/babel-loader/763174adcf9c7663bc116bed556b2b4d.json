{"ast":null,"code":"import { saveUser, logOutUser } from '../../../utils';\n\nfunction getUrl() {\n  let URL = 'http://localhost:3000/dataLogin.json';\n  return URL;\n}\n/**\n*\n* @returns {Function}\n*/\n\n\nexport default function login(body) {\n  console.log(body, \"body\");\n  const URL = getUrl();\n  return function (dispatch) {\n    dispatch(request());\n    fetch(URL, body).then(json => {\n      json.json();\n    }).then(resp => {\n      if (!json.error) {\n        if (saveUser(json.data)) {\n          console.log(body, json.json().username);\n          dispatch(received(json));\n        } else {\n          dispatch(failed({\n            error: true,\n            statusCode: \"400\",\n            message: \"Something went wrong\"\n          }));\n        }\n      } else {\n        dispatch(failed(json));\n      }\n    }).catch(error => {\n      dispatch(failed(error));\n    });\n  };\n}\n/**\n*\n* @returns {{type}}\n*/\n\nfunction request() {\n  return {\n    type: 'LOGIN_PENDING'\n  };\n}\n/**\n*\n* @param response\n* @returns {{type, payload: {json: *}}}\n*/\n\n\nfunction received(response) {\n  return {\n    type: 'LOGIN',\n    payload: {\n      response\n    }\n  };\n}\n/**\n*\n* @param error\n* @returns {{type, error: *}}\n*/\n\n\nfunction failed(error) {\n  return {\n    type: 'LOGIN_FAILED',\n    error\n  };\n}","map":{"version":3,"sources":["/var/www/html/task/src/components/Auth/actions/authLogin.js"],"names":["saveUser","logOutUser","getUrl","URL","login","body","console","log","dispatch","request","fetch","then","json","resp","error","data","username","received","failed","statusCode","message","catch","type","response","payload"],"mappings":"AAAA,SACIA,QADJ,EAEIC,UAFJ,QAGO,gBAHP;;AAKA,SAASC,MAAT,GAAiB;AACb,MAAIC,GAAG,GAAG,sCAAV;AACA,SAAOA,GAAP;AACH;AACD;;;;;;AAIA,eAAe,SAASC,KAAT,CAAeC,IAAf,EAAqB;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAiB,MAAjB;AACA,QAAMF,GAAG,GAAGD,MAAM,EAAlB;AACA,SAAO,UAAUM,QAAV,EAAoB;AACvBA,IAAAA,QAAQ,CACJC,OAAO,EADH,CAAR;AAGAC,IAAAA,KAAK,CAACP,GAAD,EAAME,IAAN,CAAL,CACCM,IADD,CACOC,IAAD,IAAS;AACXA,MAAAA,IAAI,CAACA,IAAL;AACH,KAHD,EAICD,IAJD,CAIOE,IAAD,IAAQ;AACV,UAAG,CAACD,IAAI,CAACE,KAAT,EAAe;AACX,YAAGd,QAAQ,CAACY,IAAI,CAACG,IAAN,CAAX,EAAwB;AACpBT,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAiBO,IAAI,CAACA,IAAL,GAAYI,QAA7B;AACAR,UAAAA,QAAQ,CACJS,QAAQ,CAACL,IAAD,CADJ,CAAR;AAGH,SALD,MAMK;AACDJ,UAAAA,QAAQ,CAACU,MAAM,CAAC;AAACJ,YAAAA,KAAK,EAAE,IAAR;AAAcK,YAAAA,UAAU,EAAE,KAA1B;AAAiCC,YAAAA,OAAO,EAAE;AAA1C,WAAD,CAAP,CAAR;AACH;AACJ,OAVD,MAWK;AACDZ,QAAAA,QAAQ,CAACU,MAAM,CAACN,IAAD,CAAP,CAAR;AACH;AACJ,KAnBD,EAoBCS,KApBD,CAoBOP,KAAK,IAAI;AACZN,MAAAA,QAAQ,CAACU,MAAM,CAACJ,KAAD,CAAP,CAAR;AACH,KAtBD;AAuBH,GA3BD;AA4BH;AAED;;;;;AAIA,SAASL,OAAT,GAAmB;AACf,SAAO;AACHa,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH;AAED;;;;;;;AAKA,SAASL,QAAT,CAAkBM,QAAlB,EAA4B;AACxB,SAAO;AACHD,IAAAA,IAAI,EAAE,OADH;AAEHE,IAAAA,OAAO,EAAE;AACLD,MAAAA;AADK;AAFN,GAAP;AAMH;AAED;;;;;;;AAKA,SAASL,MAAT,CAAgBJ,KAAhB,EAAuB;AACnB,SAAO;AACHQ,IAAAA,IAAI,EAAE,cADH;AAEHR,IAAAA;AAFG,GAAP;AAIH","sourcesContent":["import {\n    saveUser,\n    logOutUser\n} from '../../../utils';\n\nfunction getUrl(){\n    let URL = 'http://localhost:3000/dataLogin.json';\n    return URL;\n}\n/**\n*\n* @returns {Function}\n*/\nexport default function login(body) {\n    console.log(body,\"body\")\n    const URL = getUrl();\n    return function (dispatch) {\n        dispatch(\n            request()\n        );\n        fetch(URL, body)\n        .then((json) =>{\n            json.json()\n        })\n        .then((resp)=>{\n            if(!json.error){\n                if(saveUser(json.data)) {\n                    console.log(body,json.json().username)\n                    dispatch(\n                        received(json)\n                    )\n                }\n                else {\n                    dispatch(failed({error: true, statusCode: \"400\", message: \"Something went wrong\"}));\n                }\n            }\n            else {\n                dispatch(failed(json));\n            }\n        })\n        .catch(error => {\n            dispatch(failed(error));\n        });\n    };\n}\n\n/**\n*\n* @returns {{type}}\n*/\nfunction request() {\n    return {\n        type: 'LOGIN_PENDING',\n    };\n}\n\n/**\n*\n* @param response\n* @returns {{type, payload: {json: *}}}\n*/\nfunction received(response) {\n    return {\n        type: 'LOGIN',\n        payload: {\n            response\n        }\n    };\n}\n\n/**\n*\n* @param error\n* @returns {{type, error: *}}\n*/\nfunction failed(error) {\n    return {\n        type: 'LOGIN_FAILED',\n        error\n    };\n}\n\n\n"]},"metadata":{},"sourceType":"module"}