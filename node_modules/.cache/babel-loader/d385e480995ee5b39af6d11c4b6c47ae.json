{"ast":null,"code":"var _jsxFileName = \"/var/www/html/task/src/components/Auth/index.js\";\n// import React, {Component} from \"react\";\n// import {\n//     login\n// } from './actions';\n// import {connect} from \"react-redux\";\n// function mapStateToProps (state) {\n//     console.log(state)\n//     return {\n//         user: state.login\n//     };\n// }\n// function mapDispatchToProps (dispatch) {\n//     return {\n//         login: (body) => {\n//             dispatch(login(body));\n//         }\n//     };\n// }\n// class Login extends Component {\n//     constructor() {\n//         super();\n//     }\n//     componentWillMount(){\n//         // this.props.history.push('/dashboard');\n//     }\n//     componentWillReceiveProps(nextProps){\n//         const {user:{login:{pending, failed, error}}} = nextProps;\n//         const {user:{login:{pending: oldPending}}} = this.props;\n//         if(!pending && pending !== oldPending){\n//             if(failed){\n//                 // let myColor = { background: '#df382c', text: \"#FFFFFF\" };\n//                 // notify.show(nextProps.user.login.error, \"custom\", 6000, myColor);\n//             }else {\n//                 this.props.history.push('/dashboard');\n//             }\n//         }\n//     }\n//     submit = (e) => {\n//         e.preventDefault();\n//         let formData = new FormData(e.target)\n//         let data = {};\n//         for (var [key, value] of formData.entries()) {\n//             data[key] = value;\n//         }\n//         console.log(data);\n//         this.props.login(data);\n//     }\n//     render(){\n//         const pending = this.props.user.login.pending;\n//         return (\n//           <div className=\"wrapper fadeInDown\">\n//               <div id=\"formContent\">\n//                   <div className=\"fadeIn first\">\n//                       <h2>Login Form</h2>\n//                   </div>\n//                   <form onSubmit={this.submit}>\n//                       <input type=\"text\" className=\"fadeIn second\" name=\"email\" placeholder=\"login\" />\n//                       <input type=\"password\" className=\"fadeIn third\" name=\"password\" placeholder=\"password\" />\n//                       <input type=\"submit\" disabled={pending} className=\"btn btn-info fadeIn fourth\" value={`${pending ? 'Loading...' : 'Login'}`} />\n//                   </form>\n//               </div>\n//           </div>\n//         );\n//     }\n// }\n// export default connect(\n//     mapStateToProps,\n//     mapDispatchToProps\n// )(Login);\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { login } from '../Auth/reducers'; // import './LoginForm.css';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    let _this$state = this.state,\n        email = _this$state.email,\n        password = _this$state.password;\n    let _this$props = this.props,\n        isLoginPending = _this$props.isLoginPending,\n        isLoginSuccess = _this$props.isLoginSuccess,\n        loginError = _this$props.loginError;\n    return React.createElement(\"form\", {\n      name: \"loginForm\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group-collection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Email:\"), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      value: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      value: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, isLoginPending && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Please wait...\"), isLoginSuccess && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Success.\"), loginError && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, loginError.message)));\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    let _this$state2 = this.state,\n        email = _this$state2.email,\n        password = _this$state2.password;\n    this.props.login(email, password);\n    this.setState({\n      email: '',\n      password: ''\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoginPending: state.isLoginPending,\n    isLoginSuccess: state.isLoginSuccess,\n    loginError: state.loginError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (email, password) => dispatch(login(email, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/var/www/html/task/src/components/Auth/index.js"],"names":["React","Component","connect","login","Login","constructor","props","state","onSubmit","bind","render","email","password","isLoginPending","isLoginSuccess","loginError","e","setState","target","value","message","preventDefault","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["// import React, {Component} from \"react\";\n// import {\n//     login\n// } from './actions';\n// import {connect} from \"react-redux\";\n\n// function mapStateToProps (state) {\n//     console.log(state)\n//     return {\n//         user: state.login\n//     };\n// }\n\n// function mapDispatchToProps (dispatch) {\n//     return {\n//         login: (body) => {\n//             dispatch(login(body));\n//         }\n//     };\n// }\n\n// class Login extends Component {\n//     constructor() {\n//         super();\n//     }\n//     componentWillMount(){\n//         // this.props.history.push('/dashboard');\n//     }\n\n//     componentWillReceiveProps(nextProps){\n//         const {user:{login:{pending, failed, error}}} = nextProps;\n//         const {user:{login:{pending: oldPending}}} = this.props;\n//         if(!pending && pending !== oldPending){\n//             if(failed){\n//                 // let myColor = { background: '#df382c', text: \"#FFFFFF\" };\n//                 // notify.show(nextProps.user.login.error, \"custom\", 6000, myColor);\n//             }else {\n//                 this.props.history.push('/dashboard');\n//             }\n//         }\n//     }\n\n//     submit = (e) => {\n//         e.preventDefault();\n//         let formData = new FormData(e.target)\n//         let data = {};\n//         for (var [key, value] of formData.entries()) {\n//             data[key] = value;\n//         }\n//         console.log(data);\n//         this.props.login(data);\n//     }\n\n//     render(){\n//         const pending = this.props.user.login.pending;\n//         return (\n//           <div className=\"wrapper fadeInDown\">\n//               <div id=\"formContent\">\n//                   <div className=\"fadeIn first\">\n//                       <h2>Login Form</h2>\n//                   </div>\n//                   <form onSubmit={this.submit}>\n//                       <input type=\"text\" className=\"fadeIn second\" name=\"email\" placeholder=\"login\" />\n//                       <input type=\"password\" className=\"fadeIn third\" name=\"password\" placeholder=\"password\" />\n//                       <input type=\"submit\" disabled={pending} className=\"btn btn-info fadeIn fourth\" value={`${pending ? 'Loading...' : 'Login'}`} />\n//                   </form>\n//               </div>\n//           </div>\n//         );\n//     }\n// }\n\n// export default connect(\n//     mapStateToProps,\n//     mapDispatchToProps\n// )(Login);\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { login } from '../Auth/reducers';\n// import './LoginForm.css';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    let {email, password} = this.state;\n    let {isLoginPending, isLoginSuccess, loginError} = this.props;\n    return (\n      <form name=\"loginForm\" onSubmit={this.onSubmit}>\n        <div className=\"form-group-collection\">\n          <div className=\"form-group\">\n            <label>Email:</label>\n            <input type=\"email\" name=\"email\" onChange={e => this.setState({email: e.target.value})} value={email}/>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" onChange={e => this.setState({password: e.target.value})} value={password}/>\n          </div>\n        </div>\n\n        <input type=\"submit\" value=\"Login\" />\n\n        <div className=\"message\">\n          { isLoginPending && <div>Please wait...</div> }\n          { isLoginSuccess && <div>Success.</div> }\n          { loginError && <div>{loginError.message}</div> }\n        </div>\n      </form>\n    )\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    let { email, password } = this.state;\n    this.props.login(email, password);\n    this.setState({\n      email: '',\n      password: ''\n    });\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoginPending: state.isLoginPending,\n    isLoginSuccess: state.isLoginSuccess,\n    loginError: state.loginError\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (email, password) => dispatch(login(email, password))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}